name: 🐳 SnapMySQL Docker

on:
  push:
    paths:
      - "src/**"
      - "scripts/**"
      - "Dockerfile"
      - "package*.json"
    branches: [ "main", "dev" ]
    tags:
      - "v*"
  pull_request:
    paths:
      - "src/**"
      - "scripts/**"
      - "Dockerfile"
      - "package*.json"
    branches: [ "main", "dev" ]
  workflow_dispatch:
    inputs:
      docker-tag:
        description: "Docker tag"
        default: ""

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docker-image:
    name: Build and Publish (${{ matrix.platform }})
    # Route each platform to the correct native runner
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-24.04-arm   # or ubuntu-22.04-arm (public repos)
    runs-on: ${{ matrix.runner }}

    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Checkout the repo
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      # Step 2: Generate image tags & labels
      - name: 🔖 Set image tags
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/shaunakv1/snapmysql
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=raw,value={{branch}}-latest,enable=${{ github.ref_name != 'main' && github.event_name != 'pull_request' }}
            type=raw,value=${{ inputs.docker-tag }},enable=${{ inputs.docker-tag != '' }}
            type=sha,prefix={{branch}}-,priority=100,enable=${{ github.event_name != 'pull_request' }}
            type=semver,pattern={{raw}},priority=900
            type=ref,event=pr

      # Step 3: Set up Buildx builder (no QEMU needed on native runners)
      - name: 🏗️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      # Step 4: Log in to GitHub Container Registry
      - name: 🔐 Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Build and push Docker image with per-arch cache
      - name: 🐳 Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }} # single, native platform per job
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
